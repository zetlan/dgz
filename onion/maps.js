
var exceptSurfaces = ["/", undefined, "Q", "R", "Z"];
var constrainSurfaces = ["/", undefined];

var squareSize = 40;
/*Maps are stored as objects. First all the attributes about the map are stored in these variables, then the actual map is defined.
LoadingMap is a reference to the actual map. */

class Map {
    constructor(data, pallete, name, exits, enemies, statics) {
        this.data = data;
        this.pallete = pallete;
        this.name = name;
        this.exits = exits;
        this.enemies = enemies;
        this.statics = statics;
    }
}
var tutorial1Data = [["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                    ["1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2"],
                    ["1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "2"],
                    ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"]];

var tutorial1Exits = [];
let tutorial1 = new Map(tutorial1Data, 20, "tutorial1", tutorial1Exits, [], []);

var homeData = [["A", "A", "A", "A", "A", "A", "A", "A", "A", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "A", "A", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "A", "A", "1", "A", "A", "A", "A"]];

var homeExits = [["selya", [3 * squareSize, -8 * squareSize]]];

let home = new Map(homeData, 2, "home", homeExits, [], []);

//the position of the loadingMap variable is awkward, but it needed to be here for the calculations that are being done later
var loadingMap = home;

var selyaData = [  ["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"],
                   ["A", "i", "B", "0", "0", "0", "0", "0", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "B", "0", "0", "i", "i", "i", "0", "D", "0", "0", "0", "0", "0", "0", "S", "0", "0", "0", "0", "0", "0", "0", "0", "1"],
                   ["A", "0", "B", "0", "0", "i", "/", "i", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1"],
                   ["A", "0", "B", "0", "0", "i", "4", "i", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "B", "0", "0", "0", "0", "0", "0", "D", "0", "0", "0", "0", "S", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "B", "0", "0", "0", "0", "0", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "F", "E", "E", "E", "E", "E", "R", "I", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "A", "A", "A", "A", "A", "0", "0", "A", "D", "0", "0", "G", "C", "C", "C", "H", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "D", "0", "0", "B", "0", "0", "0", "D", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "D", "0", "0", "B", "0", "0", "0", "D", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "D", "0", "0", "B", "0", "0", "0", "D", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "i", "i", "i", "0", "0", "0", "0", "D", "0", "0", "F", "E", "R", "E", "I", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "i", "/", "i", "0", "0", "0", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "i", "3", "i", "0", "0", "0", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "D", "0", "0", "S", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "D", "D", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "I", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "2", "2", "A", "A", "A", "A", "A", "A", "A"]];


var selyaExits = [    ["rightMap", [-1 * (selyaData[0].length * squareSize), 0]], 
                      ["downMap", [-1 * squareSize, -1 * (selyaData.length-1) * squareSize]],
                      ["potionShop", [-3 * squareSize, -14 * squareSize]],
                      ["home", [-3 * squareSize, 8 * squareSize]]];

var selyaEnemies = [new Chatter(squareSize, squareSize*13),
                    new ConvoStarter(squareSize*8.2, squareSize*8, squareSize, 2),
                    new NPC(squareSize*8.2, squareSize*8, 0, "#333333", joinText, "joinText"),
                    new Box(squareSize*1, squareSize*1, "new Item(1, 1, 1, false)")];
                      
var selyaStatics = [new House(squareSize*6, squareSize*3),
                    new House(squareSize*6, squareSize*15)];

let selya = new Map(selyaData, 1, "selya", selyaExits, selyaEnemies, selyaStatics);
                      

var rightMapData = [["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["1", "0", "0", "S", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "S", "0", "Z", "0", "S", "Z", "A"],
                   ["1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "S", "0", "Z", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Z", "0", "2"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "S", "0", "0", "0", "0", "0", "Z", "0", "0", "Z", "0", "2"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Z", "Z", "S", "Z", "2"],
                   ["A", "0", "0", "0", "0", "0", "0", "S", "0", "0", "0", "0", "0", "0", "0", "0", "S", "Z", "0", "Z", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "S", "0", "0", "0", "0", "S", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "S", "Z", "A"],
                   ["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"]];

var rightMapExits = [["selya", [(selyaData[0].length * squareSize), 0]],
                     ["stoneEntrance", [-1 * (rightMapData[0].length * squareSize), -2 * squareSize]]];

var rightMapEnemies = [new Slime(160, 60),
                       new Ground(160, 120, 20, 50, 1),
                       new Slime(160, 60),
                       new Slime(160, 60)];

var rightMapStatics = [];

let rightMap = new Map(rightMapData, 1, "rightMap", rightMapExits, rightMapEnemies, rightMapStatics);

var shopData = [["A", "A", "A", "1", "A", "A", "A", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "0", "0", "0", "0", "0", "0", "A"],
                ["A", "A", "A", "A", "A", "A", "A", "A"]];

var shopExits = [["selya", [3 * squareSize, 14 * squareSize]]];

var shopEnemies = [ new NPC(squareSize * 2, squareSize * 5, 0, hyperColor, shopText, "shopText"), 
                    new NPC(squareSize * 6, squareSize * 5, 0, hyperColor, questText, "questText")];

var shopStatics = [];

let potionShop = new Map(shopData, 2, "potionShop", shopExits, shopEnemies, shopStatics);

//stony area


//desert area

var downMapData = [["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "1", "1", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "G", "0", "H", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "B", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "F", "E", "I", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "A", "A", "2", "2", "A", "A", "A", "A", "A", "A", "A", "A", "A", "3", "3", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"]];

var downMapExits =     [["selya", [1 * squareSize, selyaData.length * squareSize]],
                        ["desert_l1", [0, -1 * downMapData.length * squareSize]],
                        ["desert_m1", [1 * squareSize, selyaData.length * squareSize]]];

var downMapEnemies = [];

var downMapStatics = [];

let downMap = new Map(downMapData, 1, "downMap", downMapExits, downMapEnemies, downMapStatics);


var desertL1Data = [["A", "A", "A", "1", "1", "A", "A", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "0", "0", "0", "0", "0", "0", "A"],
                    ["A", "A", "A", "A", "A", "A", "A", "A"]];

var desertL1Exits = [["downMap", [0, -1 * downMapData.length * squareSize]]];

var desertL1Statics = [];

var desertL1Enemies = [];

let desert_l1 = new Map(desertL1Data, 4, "desert_l1", desertL1Exits, desertL1Enemies, desertL1Statics);
//jungle area

//north