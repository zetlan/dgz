
var exceptSurfaces = ["/", undefined, "Q", "R", "Z"];
var constrainSurfaces = ["/", undefined];

var squareSize = 40;
/* numbers are used for ground that's not solid, while letters are used for solid things and / are used for exits.

 Maps always follow the format mapInfo, data
Data is [pallete,
        map to exit to, [x modification, y modification]]
        
modifications say clear if they aren't modified, and the pallete is a number.*/
var home = [["A", "A", "A", "A", "A", "A", "A", "A", "A", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "A", "A", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "A", "A", "1", "A", "A", "A", "A", "/", "/", "home"]];

var homeData =       [2, 
                      ["selya", [3 * squareSize, -8 * squareSize]]];

var loadingMap = home;

var selya = [      ["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"],
                   ["A", "i", "B", "0", "0", "0", "0", "0", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "B", "0", "0", "i", "i", "i", "0", "D", "0", "0", "0", "0", "0", "0", "S", "0", "0", "0", "1"],
                   ["A", "0", "B", "0", "0", "i", "/", "i", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1"],
                   ["A", "0", "B", "0", "0", "i", "4", "i", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "B", "0", "0", "0", "0", "0", "0", "D", "0", "0", "0", "0", "S", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "B", "0", "0", "0", "0", "0", "0", "D", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "F", "E", "E", "E", "E", "E", "R", "I", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "A", "A", "A", "A", "A", "0", "0", "A", "A", "A", "0", "G", "C", "C", "C", "H", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A", "0", "B", "0", "0", "0", "D", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A", "0", "B", "0", "0", "0", "D", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A", "0", "B", "0", "0", "0", "D", "A"],
                   ["A", "0", "0", "0", "0", "i", "i", "i", "0", "0", "0", "0", "0", "A", "0", "F", "E", "R", "E", "I", "A"],
                   ["A", "0", "0", "0", "0", "i", "/", "i", "0", "0", "0", "0", "0", "A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "i", "3", "i", "0", "0", "0", "0", "0", "A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A", "0", "S", "0", "0", "0", "0", "A"],
                   ["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "2", "2", "A", "A", "selya"]];
//the position of the loadingMap variable is awkward, but it needed to be here for the calculations that are being done later


var selyaData = [1, 
                      ["rightMap", [-1 * (selya[0].length * squareSize), 0]], 
                      ["downMap", [-14 * squareSize, -1 * selya.length * squareSize]],
                      ["shop", [-3 * squareSize, -14 * squareSize]],
                      ["home", [-3 * squareSize, 8 * squareSize]],
                      "entities",
                      new Ground(squareSize, squareSize*3, 10, 10, 1),
                      new Enemy(squareSize, squareSize*6, 10, 10, 1),
                      new Chatter(squareSize, squareSize*13),
                      "statics",
                      new Box(squareSize*1, squareSize*1),
                      new House(squareSize*6, squareSize*3),
                      new House(squareSize*6, squareSize*15)];

var rightMap = [   ["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["1", "0", "0", "S", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "S", "0", "Z", "0", "S", "Z", "A"],
                   ["1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "S", "0", "Z", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Z", "0", "2"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "S", "0", "0", "0", "0", "0", "Z", "0", "0", "Z", "0", "2"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Z", "Z", "S", "Z", "2"],
                   ["A", "0", "0", "0", "0", "0", "0", "S", "0", "0", "0", "0", "0", "0", "0", "0", "S", "Z", "0", "Z", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "S", "0", "0", "0", "0", "S", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "S", "Z", "A"],
                   ["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "rightMap"]];
var rightMapData =    [1, 
                      ["selya", [(selya[0].length * squareSize), 0]],
                      ["stoneEntrance", [-1 * (rightMap[0].length * squareSize), -2 * squareSize]],
                      "entities",
                      [new Ground(160, 60, 7, 5, 1)],
                      [new Ground(160, 120, 20, 50, 1)],
                      [new Ground(160, 180, 7, 5, 1)],
                      [new Ground(160, 240, 7, 5, 1)]];

var downMap = [    ["A", "A", "A", "1", "1", "A", "A", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "A", "A", "A", "A", "A", "A", "A", "downMap"]];

var downMapData =     [1, 
                      ["selya", [14 * squareSize, selya.length * squareSize]]];

var shop = [["A", "A", "A", "1", "A", "A", "A", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "0", "0", "0", "0", "0", "0", "A"],
            ["A", "A", "A", "A", "A", "A", "A", "A", "shop"]];

var shopData =     [1, 
                   ["selya", [3 * squareSize, 14 * squareSize]],
                   "entities",
                   new NPC(squareSize * 2, squareSize * 5, 0, hyperColor, shopText), 
                   new NPC(squareSize * 6, squareSize * 5, 0, hyperColor, questText)];

var stoneEntrance = [["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A"],
                   ["A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "stoneEntrance"]];

var stoneEntranceData =[3, 
                      ["rightMap", [1 * (rightMap[0].length * squareSize), 2 * squareSize]],
                      ["stoneEntrance", [-1 * (rightMap[0].length * squareSize), -2 * squareSize]],
                      "entities",
                      new Ground(160, 60, 10, 10, 1),
                      new Ground(160, 120, 15, 50, 1),
                      new Ground(160, 180, 10, 10, 1),
                      new Ground(160, 240, 10, 10, 1)];